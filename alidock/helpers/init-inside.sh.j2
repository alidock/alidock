#!/bin/bash -ex

# Init script for alidock that runs inside the container. Auto-generated.

# Log into the shared directory to allow debug
exec &> >(tee "{{sharedDir}}/{{logFile}}")

cd /

# Change global prompt
cat > /etc/profile.d/alidock.sh <<\EOF
#!/bin/bash
[[ $_ALIDOCK_ENV ]] && return 0;
function _alidock_ps1() {
  local RV=$?
  [[ $RV != 0 ]] && echo -n "$RV|"
}
export -f _alidock_ps1
export PS1='`_alidock_ps1`[{{dockName}}] \w \$> '
export ALIBUILD_WORK_DIR="$HOME/.sw"
export _ALIDOCK_ENV=1
EOF

# Make tab completions case insensitive
echo 'set completion-ignore-case on' >> /etc/inputrc

# Create server's SSH key
rm -f /etc/ssh/ssh_host_rsa_key
ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''

# Create a user with the same name/UID as the user outside the container
useradd -d "{{sharedDir}}" -M -N -s /bin/bash -u "{{userId}}" "{{userName}}"
chmod 0755 "{{sharedDir}}"
chown "{{userName}}" "{{sharedDir}}"

# Create a SSH key for that user and authorize it
mkdir -p "{{sharedDir}}/.ssh"
pushd "{{sharedDir}}/.ssh"
  rm -f id_rsa id_rsa.pub
  ssh-keygen -t rsa -f id_rsa -N ''
  cp id_rsa.pub authorized_keys
popd
chmod -R u=rwX,g=rX,o=rX "{{sharedDir}}/.ssh"
chmod -R 0600 "{{sharedDir}}/.ssh/id_rsa"
chown -R "{{userName}}" "{{sharedDir}}/.ssh"

# Silence login messages ("Last login:...")
touch "{{sharedDir}}/.hushlogin"
chown "{{userName}}" "{{sharedDir}}/.hushlogin"

# Create skeleton .bashrc/.bash_profile
pushd "{{sharedDir}}"
  [[ -f .bashrc ]] || cat > .bashrc <<\EOF
source /etc/bashrc
# Add your modifications below
EOF
  [[ -f .bash_profile ]] || cat > .bash_profile <<\EOF
[[ -f ~/.bashrc ]] && source ~/.bashrc
# Add your modifications below
EOF
  chown "{{userName}}" .bashrc .bash_profile
popd

# Check if we can resolve domain names; if we can't we start cloudflared
ERR=0
getent hosts www.google.com &> /dev/null || ERR=$?
if [[ $ERR != 0 ]]; then
  nohup cloudflared proxy-dns &> /dev/null &
  printf '# Use cloudflared\nnameserver 127.0.0.1\n' > /etc/resolv.conf
fi

# Start the SSH server
exec /usr/sbin/sshd -D
